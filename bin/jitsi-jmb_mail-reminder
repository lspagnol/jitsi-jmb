#!/bin/bash

########################################################################
# Archivage des réservation expirées
########################################################################

# On vérifie si le JMS tourne sur une machine HA (ssds-ha)
test -x /usr/local/ssds_ha/ha-state
if [ ${?} -eq 0 ] ; then
	# On ne continue que si on est sur le noeud actif
	/usr/local/ssds_ha/ha-state -q || exit 0
fi

# Timestamp
now=$(date +%s)

########################################################################

# Charger la configuration et les fonctions
JMB_PATH=/opt/jitsi-jmb
source ${JMB_PATH}/etc/jmb.cf
source ${JMB_PATH}/lib/jmb.lib

########################################################################

mail_tpl="${JMB_PATH}/inc/mail_tpl_reminder.sh"

# Si l'adresse de l'organisateur ne correspond pas au domaine du serveur
# Jitsi, on remplace l'adresse d'enveloppe pour passer les contrôles SPF
echo "${auth_mail}" |egrep -q "${JMB_MAIL_DOMAIN//\./\\.}$"
if [ $? -eq 0 ] ; then
	envelope_from="${auth_mail}"
else
	envelope_from="${JMB_MAIL_FROM_NOTIFICATION}"
fi

# Récupérer les IDs des réunions pour lesquelles un rappel doit être envoyé
for f in $(\
	sqlite3 ${JMB_DB} "\
	SELECT mail_reminder_meeting_id FROM mail_reminder
	WHERE '${now}' >= mail_reminder.mail_reminder_date AND mail_reminder.mail_reminder_done = '0';") ; do

	# Lire les données de la réunion
	get_meeting_infos ${f}

	# La durée est stockée en secondes, le mail indique des minutes
	duration=$(( ${duration} / 60 ))

	# Rappel à l'organisateur
	mailto="${owner}"
	role="owner"
	source ${mail_tpl} |mail\
		-r "${JMB_MAIL_FROM_NOTIFICATION}"\
		-a "Content-Type: text/plain; charset=utf-8; format=flowed"\
		-a "Content-Transfer-Encoding: 8bit"\
		-a "Content-Language: fr"\
		-a "from: ${JMB_NAME} <${JMB_MAIL_FROM_NOTIFICATION}>"\
		-a "subject: $(utf8_to_mime ${JMB_SUBJECT_MAIL_REMINDER_OWNER})"\
		${mailto}

	# Invités et modérateurs: envoyer les rappels uniquement à ceux qui
	# n'ont pas décliné l'invitation

	# Rappel aux invités
	role="guest"
	for mailto in ${guests} ; do

		# On recupère le "partstat" de l'invité pour cette réunion
		r=$(sqlite3 ${JMB_DB} "\
		SELECT attendees.attendee_partstat FROM attendees
		INNER JOIN mail_reminder ON mail_reminder.mail_reminder_meeting_id = attendees.attendee_meeting_id
		WHERE mail_reminder.mail_reminder_meeting_id='${f}'
		 AND attendees.attendee_email='${mailto}'
		 AND attendees.attendee_role='${role}'
		LIMIT 1;")

		if [ "${r}" != "2" ] ; then
			# L'invité n'a pas décliné l'invitation
			hash=$(get_meeting_hash ${f} ${mailto} ${role})
			# Mail de notification
			source ${mail_tpl} |mail\
				-r "${envelope_from}"\
				-a "Content-Type: text/plain; charset=utf-8; format=flowed"\
				-a "Content-Transfer-Encoding: 8bit"\
				-a "Content-Language: fr"\
				-a "from: ${owner}"\
				-a "subject: $(utf8_to_mime ${JMB_SUBJECT_MAIL_REMINDER_GUEST})"\
				${mailto}
		fi
	done

	# Rappel aux modérateurs
	role="moderator"
	for mailto in ${moderators} ; do

		# On recupère le "partstat" de l'invité pour cette réunion
		r=$(sqlite3 ${JMB_DB} "\
		SELECT attendees.attendee_partstat FROM attendees
		INNER JOIN mail_reminder ON mail_reminder.mail_reminder_meeting_id = attendees.attendee_meeting_id
		WHERE mail_reminder.mail_reminder_meeting_id='${f}'
		 AND attendees.attendee_email='${mailto}'
		 AND attendees.attendee_role='${role}'
		LIMIT 1;")

		if [ "${r}" != "2" ] ; then
			# Le modérateur n'a pas décliné l'invitation
			hash=$(get_meeting_hash ${f} ${mailto} ${role})
			# Mail de notification
			source ${mail_tpl} |mail\
				-r "${envelope_from}"\
				-a "Content-Type: text/plain; charset=utf-8; format=flowed"\
				-a "Content-Transfer-Encoding: 8bit"\
				-a "Content-Language: fr"\
				-a "from: ${owner}"\
				-a "subject: $(utf8_to_mime ${JMB_SUBJECT_MAIL_REMINDER_MODERATOR})"\
				${mailto}
		fi
	done

	# Reminder "consommé" -> on le désactive
	sqlite3 ${JMB_DB} "UPDATE mail_reminder SET mail_reminder_done='1' WHERE mail_reminder_meeting_id='${f}' AND mail_reminder_date < '${now}';"

done
