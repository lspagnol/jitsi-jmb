#!/bin/bash

########################################################################
# Archivage des réservation expirées
########################################################################

# On vérifie si le JMS tourne sur une machine HA (ssds-ha)
test -x /usr/local/ssds_ha/ha-state
if [ ${?} -eq 0 ] ; then
	# On ne continue que si on est sur le noeud actif
	/usr/local/ssds_ha/ha-state -q || exit 0
fi

# Timestamp
now=$(date +%s)

########################################################################

# Charger la configuration
JMB_PATH=/opt/jitsi-jmb
source ${JMB_PATH}/etc/jmb.cf
source ${JMB_PATH}/lib/jmb.lib

########################################################################

# Récupérer les IDs des réunions pour lesquelles un rappel doit être envoyé -> variable "${tsn}"
for f in $(\
	sqlite3 ${JMB_DB} "\
	SELECT xmpp_reminder_meeting_id FROM xmpp_reminder
	WHERE '${now}' >= xmpp_reminder_date AND xmpp_reminder_done = '0';") ; do

	# Lire les données de la réunion
	get_meeting_infos ${f}

	# Temps restant avant la fin de la réunion
	delta=$(( ( ${end} - ${now} ) / 60 ))
	if [ ${delta} -gt 0 ] ; then
		# Delta positif
		${JMB_PATH}/bin/jitsi-jmb_send-xmpp ${name} "La réunion se termine dans ${delta} minutes ..."
	else
		# Delta inférieur ou égal à zéro -> fin de la réunion
		${JMB_PATH}/bin/jitsi-jmb_send-xmpp ${name} "La réunion est terminée !!"
	fi

	# Reminder "consommé" -> on le désactive
	sqlite3 ${JMB_DB} "UPDATE xmpp_reminder SET xmpp_reminder_done='1' WHERE xmpp_reminder_meeting_id='${f}' AND xmpp_reminder_date < '${now}';"

done
